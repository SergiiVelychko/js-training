//! ===========================================Прототипы и классы================================================

// 1. В классе не обязательно объявлять конструктор (конструктор сам создаётся 'под капотом')
// 2. Поиск свойств в цепи прототипов прерывается при нахождении первого совпадения
// 3. Метод класса может быть как публичным, так и приватным
// 4. Конструктор класса не может быть статическим методом
// 5. Интерфейс в ООП - это набор публичных свойств и публичных методов класса
// 6. Операторо 'new' предназначен для создания экземпляра класса
// 7. Свойство [[Prototype]] - это свойство объекта, в котором сохраняется ссылка на его объект - прототип. Двойные квадратные скобки [[Prototype]] означают то, что это свойство является защищенным и его можно только прочесть и невозможно к нему обратиться напрямую в коде.
// 8. Экземпляр класса (инстанс) - это отдельный конкретный представитель класса
// 9. Вызов Object.create устанавливает объект 'A' прототипом объекта 'B'

//const A = {value: 5};
//const B = Object.create(A);
// 10. Название приватного свойства обязательно начинается с символа #
// 11. Приватное свойство # необходимо сначала объявить перед конструктором класса, а потом уже вызывать непосредственно в самом конструкторе класса
// 12. Статические свойства класса - это свойства, которые не добавляются в экземпляры (инстансы) во время создания
